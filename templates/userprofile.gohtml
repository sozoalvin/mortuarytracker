<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Edit User Profile</title>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous">

    {{/* <style type="text/css">
.btn:active:focus {
  color: #ffffff !important;
  background-color: #161617 !important;
  border-color: #494F57 !important;
}</style> */}}

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<script>
window.onload=function(){

document.getElementById("copyButton").addEventListener("click", function() {
  copyToClipboardMsg(document.getElementById("copyTarget"), "msg");
});


function copyToClipboardMsg(elem, msgElem) {
  var succeed = copyToClipboard(elem);
  var msg;
  if (!succeed) {
    msg = "Copy not supported or blocked.  Press Ctrl+c to copy."
  } else {
    msg = "Text copied to the clipboard."
  }
  if (typeof msgElem === "string") {
    msgElem = document.getElementById(msgElem);
  }
  msgElem.innerHTML = msg;
  setTimeout(function() {
    msgElem.innerHTML = "";
  }, 2000);
}

function copyToClipboard(elem) {
  // create hidden text element, if it doesn't already exist
  var targetId = "_hiddenCopyText_";
  var isInput = elem.tagName === "INPUT" || elem.tagName === "TEXTAREA";
  var origSelectionStart, origSelectionEnd;
  if (isInput) {
    // can just use the original source element for the selection and copy
    target = elem;
    origSelectionStart = elem.selectionStart;
    origSelectionEnd = elem.selectionEnd;
  } else {
    // must use a temporary form element for the selection and copy
    target = document.getElementById(targetId);
    if (!target) {
      var target = document.createElement("textarea");
      target.style.position = "absolute";
      target.style.left = "-9999px";
      target.style.top = "0";
      target.id = targetId;
      document.body.appendChild(target);
    }
    target.textContent = elem.textContent;
  }
  // select the content
  var currentFocus = document.activeElement;
  target.focus();
  target.setSelectionRange(0, target.value.length);

  // copy the selection
  var succeed;
  try {
    succeed = document.execCommand("copy");
  } catch (e) {
    succeed = false;
  }
  // restore original focus
  if (currentFocus && typeof currentFocus.focus === "function") {
    currentFocus.focus();
  }

  if (isInput) {
    // restore prior selection
    elem.setSelectionRange(origSelectionStart, origSelectionEnd);
  } else {
    // clear temporary content
    target.textContent = "";
  }
  return succeed;
}
}
</script>
  
  <style type="text/css">
   body { background: #FFCC00 !important; } 
</style>

</head>
<body>

{{template "new-navbar" .}}

<div class="container maincontainerindex">
  <div class="row mt-5">
    <div class="col-sm"></div>
    <div class="col-sm shadow-lg">
    {{/* <img src="https://i.ibb.co/C8QV3cQ/tom-yum-nodots.png"> */}}
     <img src="assets/rs3.png">

    </div>
    <div class="col-sm"></div>
  </div>
</div>

<div class="container pb-5"></div> 
<div class="container bg-light ml-10 mr-10 rounded shadow-sm pt-1 pb-1 pl-4 mb-3 bg-white rounded">
<div class="container p-1">
<h3>Edit User Profile</h3>
</div></div>

<div class="container bg-light ml-10 mr-10 rounded shadow-sm pt-3 pb-1 pl-4 mb-3 bg-white rounded">

<div>Your API Key</div>


<div class="form-group mt-2 mb-0"><input id="copyTarget" value={{.APIkey}}> <button id="copyButton" class="btn btn-dark text-justify ml-1">Copy</button>

<form method="post">

<button class="btn btn-dark text-justify ml-2 mt-1" name="regenerateAPIKey" value="regenerateAPIKey">Regenerate API Key</button><br><br>

</div>

  <div class="form-group pt-0">
    <div class="form-group">
        <label for="exampleFormControlInput1">Old Password</label>
        <input type="password" class="form-control" name="passwordOld" placeholder="Enter your old password">
    </div>

    <div class="form-group">
        <label for="exampleFormControlInput1">New Password</label>
        <input type="password" class="form-control" name="passwordNew" placeholder="Enter your new password">
    </div>
    <p class="text-danger inline small">{{ .Data.Password}}</p>

        <div class="col-6"><button type="submit" class="btn btn-dark text-justify" name="updatePassword" value="updatePassword">Update Password</button>
    </div>
    <div class="form-group mt-2">
        <label for="exampleFormControlInput1">Update Your Delivery Address</label>
        <input type="text" class="form-control" name="fullAddress">
    </div>

    <div class="form-group">
        <label for="exampleFormControlInput1">Your Postal Code</label>
        <input type="text" class="form-control" name="postalCode">
    </div>
    
    <p class="text-danger inline small">{{ .Data.Address}}</p>

    <div class="col-6">
        <button type="submit" class="btn btn-dark text-justify" name="updateAddress" value="updateAddress">Update Address Book</button>
    </div>

<div class="form-group mt-2">
        <label for="exampleFormControlInput1">Your Contact Number</label>
        <input type="text" class="form-control" name="postalCode">
    </div>
    
    <p class="text-danger inline small">{{ .Data.ContactNumber}}</p>

    <div class="col-6">
        <button type="submit" class="btn btn-dark text-justify" name="updateContact" value="updateContact">Update Contact Number</button>
    </div>

</form>

</div>
</div>

<div class="container pb-4"></div>

</body>

{{template "new-footer"}}
</html>